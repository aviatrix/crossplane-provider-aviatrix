/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NetworkDomainConnectionPolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type NetworkDomainConnectionPolicyParameters struct {

	// Name of the Network Domain to connect to Domain 1.
	// Name of network domain that will be connected to domain 1.
	// +kubebuilder:validation:Required
	DomainName2 *string `json:"domainName2" tf:"domain_name_2,omitempty"`
}

// NetworkDomainConnectionPolicySpec defines the desired state of NetworkDomainConnectionPolicy
type NetworkDomainConnectionPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkDomainConnectionPolicyParameters `json:"forProvider"`
}

// NetworkDomainConnectionPolicyStatus defines the observed state of NetworkDomainConnectionPolicy.
type NetworkDomainConnectionPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkDomainConnectionPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkDomainConnectionPolicy is the Schema for the NetworkDomainConnectionPolicys API. Creates and manages an Aviatrix Segmentation Network Domain Connection Policy
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aviatrix}
type NetworkDomainConnectionPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkDomainConnectionPolicySpec   `json:"spec"`
	Status            NetworkDomainConnectionPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkDomainConnectionPolicyList contains a list of NetworkDomainConnectionPolicys
type NetworkDomainConnectionPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkDomainConnectionPolicy `json:"items"`
}

// Repository type metadata.
var (
	NetworkDomainConnectionPolicy_Kind             = "NetworkDomainConnectionPolicy"
	NetworkDomainConnectionPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkDomainConnectionPolicy_Kind}.String()
	NetworkDomainConnectionPolicy_KindAPIVersion   = NetworkDomainConnectionPolicy_Kind + "." + CRDGroupVersion.String()
	NetworkDomainConnectionPolicy_GroupVersionKind = CRDGroupVersion.WithKind(NetworkDomainConnectionPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkDomainConnectionPolicy{}, &NetworkDomainConnectionPolicyList{})
}
