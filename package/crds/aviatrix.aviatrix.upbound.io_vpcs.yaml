---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vpcs.aviatrix.aviatrix.upbound.io
spec:
  group: aviatrix.aviatrix.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aviatrix
    kind: VPC
    listKind: VPCList
    plural: vpcs
    singular: vpc
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VPC is the Schema for the VPCs API. Creates and manages Aviatrix-created
          VPCs
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VPCSpec defines the desired state of VPC
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountName:
                    description: This parameter represents the name of a Cloud-Account
                      in Aviatrix controller. Account name. This account will be used
                      to create an Aviatrix VPC.
                    type: string
                  aviatrixFirenetVpc:
                    description: 'Specify whether it is an Aviatrix FireNet VPC to
                      be used for Aviatrix FireNet and Transit FireNet solutions.
                      Only AWS, Azure, AzureGov, AWSGov, AWSChina and AzureChina are
                      supported. Required to be false for other providers. Valid values:
                      true, false. Default: false. Specify the VPC as Aviatrix FireNet
                      VPC or not. Required to be false for GCP provider.'
                    type: boolean
                  aviatrixTransitVpc:
                    description: 'Specify whether it is an Aviatrix Transit VPC to
                      be used for Transit Network or TGW solutions. Only AWS, AWSGov,
                      AWSChina, and Alibaba Cloud are supported. Required to be false
                      for other providers. Valid values: true, false. Default: false.
                      Specify the VPC as Aviatrix Transit VPC or not. Required to
                      be false for GCP provider.'
                    type: boolean
                  cidr:
                    description: 'VPC CIDR. Required to be empty for GCP provider,
                      and non-empty for other providers. Example: "10.11.0.0/24".
                      Subnet of the VPC to be created. Required to be empty for GCP
                      provider, and non-empty for other providers.'
                    type: string
                  cloudType:
                    description: Type of cloud service provider, requires an integer
                      value. Currently only AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32),
                      AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud(8192)
                      are supported. Type of cloud service provider.
                    type: number
                  enableNativeGwlb:
                    description: 'Enable Native AWS Gateway Load Balancer for FireNet
                      Function. Only valid with cloud_type = 1 (AWS). This option
                      is only applicable to TGW-integrated FireNet. Currently, AWS
                      Gateway Load Balancer is only supported in AWS regions: us-west-2,
                      us-east-1, eu-west-1, ap-southeast-2 and sa-east-1. Valid values:
                      true or false. Default value: false. Available as of provider
                      version R2.18+. Enable Native AWS GWLB for FireNet Function.
                      Only valid with cloud_type = 1 (AWS). Valid values: true or
                      false. Default value: false. Available as of provider version
                      R2.18+.'
                    type: boolean
                  enablePrivateOobSubnet:
                    description: 'Switch to enable private oob subnet. Only supported
                      for AWS, AWSGov and AWSChina providers. Valid values: true,
                      false. Default value: false. Available as of provider version
                      R2.18+. Switch to enable private oob subnet. Only supported
                      for AWS/AWSGov provider. Valid values: true, false. Default
                      value: false.'
                    type: boolean
                  numOfSubnetPairs:
                    description: 'Number of public subnet and private subnet pair
                      created. Only supported for AWS, Azure provider. Example: 1.
                      Available in provider version R2.17+. Number of public subnet
                      and private subnet pair to be created.'
                    type: number
                  privateModeSubnets:
                    description: Switch to only launch private subnets. Only available
                      when Private Mode is enabled on the Controller. Only AWS, Azure,
                      AzureGov and AWSGov are supported. Available in Provider version
                      R2.23+. Switch to only launch private subnets. Only available
                      when Private Mode is enabled on the Controller.
                    type: boolean
                  region:
                    description: 'Region of cloud provider. Required to be empty for
                      GCP provider, and non-empty for other providers. Example: AWS:
                      "us-east-1", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov:
                      "USGov Arizona", AWSGov: "us-gov-east-1", AWSChina: "cn-north-1",
                      AzureChina: "China North". Region of cloud provider. Required
                      to be empty for GCP provider, and non-empty for other providers.'
                    type: string
                  resourceGroup:
                    description: The name of an existing resource group or a new resource
                      group to be created for the Azure VNet.  A new resource group
                      will be created if left blank. Only available for Azure, AzureGov
                      and AzureChina providers. Available as of provider version R2.19+.
                      Resource group of the Azure VPC created.
                    type: string
                  subnetSize:
                    description: 'Subnet size. Only supported for AWS, Azure provider.
                      Example: 24. Available in provider version R2.17+. Subnet size.'
                    type: number
                  subnets:
                    description: List of subnets to be specify for GCP provider. Required
                      to be non-empty for GCP provider, and empty for other providers.
                      List of subnet of the VPC to be created. Required to be non-empty
                      for GCP provider, and empty for other providers.
                    items:
                      properties:
                        cidr:
                          description: 'VPC CIDR. Required to be empty for GCP provider,
                            and non-empty for other providers. Example: "10.11.0.0/24".
                            Subnet cidr.'
                          type: string
                        name:
                          description: Name of the VPC to be created. Subnet name.
                          type: string
                        region:
                          description: 'Region of cloud provider. Required to be empty
                            for GCP provider, and non-empty for other providers. Example:
                            AWS: "us-east-1", Azure: "East US 2", OCI: "us-ashburn-1",
                            AzureGov: "USGov Arizona", AWSGov: "us-gov-east-1", AWSChina:
                            "cn-north-1", AzureChina: "China North". Subnet region.'
                          type: string
                      type: object
                    type: array
                required:
                - accountName
                - cloudType
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VPCStatus defines the observed state of VPC.
            properties:
              atProvider:
                properties:
                  availabilityDomains:
                    description: List of OCI availability domains. List of OCI availability
                      domains.
                    items:
                      type: string
                    type: array
                  azureVnetResourceId:
                    description: Azure VNet resource ID. Azure vnet resource ID.
                    type: string
                  faultDomains:
                    description: List of OCI fault domains. List of OCI fault domains.
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  privateSubnets:
                    description: List of private subnet of the VPC(AWS, Azure) to
                      be created. List of private subnet of the VPC to be created.
                    items:
                      properties:
                        cidr:
                          description: 'VPC CIDR. Required to be empty for GCP provider,
                            and non-empty for other providers. Example: "10.11.0.0/24".'
                          type: string
                        name:
                          description: Name of the VPC to be created.
                          type: string
                        subnetId:
                          description: ID of this subnet.
                          type: string
                      type: object
                    type: array
                  publicSubnets:
                    description: List of public subnet of the VPC(AWS, Azure) to be
                      created. List of public subnet of the VPC to be created.
                    items:
                      properties:
                        cidr:
                          description: 'VPC CIDR. Required to be empty for GCP provider,
                            and non-empty for other providers. Example: "10.11.0.0/24".'
                          type: string
                        name:
                          description: Name of the VPC to be created.
                          type: string
                        subnetId:
                          description: ID of this subnet.
                          type: string
                      type: object
                    type: array
                  routeTables:
                    description: List of route table ids associated with this VPC.
                      Only populated for AWS, AWSGov and Azure VPC. List of route
                      table ids associated with this VPC.
                    items:
                      type: string
                    type: array
                  subnets:
                    description: List of subnets to be specify for GCP provider. Required
                      to be non-empty for GCP provider, and empty for other providers.
                      List of subnet of the VPC to be created. Required to be non-empty
                      for GCP provider, and empty for other providers.
                    items:
                      properties:
                        subnetId:
                          description: ID of this subnet. Subnet ID.
                          type: string
                      type: object
                    type: array
                  vpcId:
                    description: ID of the VPC to be created. ID of the VPC created.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
