---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: gateways.aviatrix.aviatrix.upbound.io
spec:
  group: aviatrix.aviatrix.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aviatrix
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Gateway is the Schema for the Gateways API. Creates and manages
          Aviatrix gateways
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewaySpec defines the desired state of Gateway
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountName:
                    description: Account name. This account will be used to launch
                      Aviatrix gateway. Account name. This account will be used to
                      launch Aviatrix gateway.
                    type: string
                  additionalCidrs:
                    description: A list of destination CIDR ranges that will also
                      go through the VPN tunnel when Split Tunnel Mode is enabled.
                      A list of destination CIDR ranges that will also go through
                      the VPN tunnel when Split Tunnel Mode is enabled.
                    type: string
                  additionalCidrsDesignatedGateway:
                    description: 'A list of CIDR ranges separated by comma to configure
                      when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
                      A list of CIDR ranges separated by comma to configure when ''designated_gateway''
                      feature is enabled.'
                    type: string
                  allocateNewEip:
                    description: 'If set to false, use an available address in Elastic
                      IP pool for this gateway. Otherwise, allocate a new Elastic
                      IP and use it for this gateway. Available in Controller 2.7+.
                      Valid values: true, false. Default: true. When value is false,
                      reuse an idle address in Elastic IP pool for this gateway. Otherwise,
                      allocate a new Elastic IP and use it for this gateway.'
                    type: boolean
                  availabilityDomain:
                    description: Availability domain. Required and valid only for
                      OCI. Available as of provider version R2.19.3. Availability
                      domain for OCI.
                    type: string
                  azureEipNameResourceGroup:
                    description: 'Name of public IP Address resource and its resource
                      group in Azure to be assigned to the gateway instance. Example:
                      "IP_Name:Resource_Group_Name". Required when allocate_new_eip
                      is false and cloud_type is Azure, AzureGov or AzureChina. Available
                      as of provider version 2.20+. The name of the public IP address
                      and its resource group in Azure to assign to this Gateway.'
                    type: string
                  cloudType:
                    description: Cloud service provider to use to launch the gateway.
                      Requires an integer value. Currently supports AWS(1), GCP(4),
                      Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024),
                      AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384)
                      and AWS Secret (32768). Type of cloud service provider.
                    type: number
                  customerManagedKeysSecretRef:
                    description: Customer-managed key ID. Customer managed key ID.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  duoApiHostname:
                    description: 'API hostname for DUO auth mode. Required: Yes if
                      otp_mode is "2". API hostname for DUO auth mode.'
                    type: string
                  duoIntegrationKey:
                    description: Integration key for DUO auth mode. Required if otp_mode
                      is "2". Integration key for DUO auth mode.
                    type: string
                  duoPushMode:
                    description: 'Push mode for DUO auth. Required if otp_mode is
                      "2". Valid values: "auto", "selective" and "token". Push mode
                      for DUO auth.'
                    type: string
                  duoSecretKeySecretRef:
                    description: Secret key for DUO auth mode. Required if otp_mode
                      is "2". Secret key for DUO auth mode.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  eip:
                    description: Specified EIP to use for gateway creation. Required
                      when allocate_new_eip is false.  Available in Controller version
                      3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov,
                      AWSChina, AzureChina, AWS Top Secret and AWS Secret. Required
                      when allocate_new_eip is false. It uses specified EIP for this
                      gateway.
                    type: string
                  elbName:
                    description: A name for the ELB that is created. If it is not
                      specified, a name is generated automatically. A name for the
                      ELB that is created.
                    type: string
                  enableDesignatedGateway:
                    description: 'Enable Designated Gateway feature for Gateway. Only
                      supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS
                      Secret gateways. Valid values: true, false. Default value: false.
                      Please view documentation here for more information on this
                      feature. Enable ''designated_gateway'' feature for Gateway.
                      Valid values: true, false.'
                    type: boolean
                  enableElb:
                    description: 'Specify whether to enable ELB or not. Not supported
                      for OCI gateways. Valid values: true, false. Specify whether
                      to enable ELB or not.'
                    type: boolean
                  enableEncryptVolume:
                    description: 'Enable EBS volume encryption for the gateway. Only
                      supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS
                      Secret gateways. Valid values: true, false. Default value: false.
                      Enable encrypt gateway EBS volume. Only supported for AWS provider.
                      Valid values: true, false. Default value: false.'
                    type: boolean
                  enableJumboFrame:
                    description: 'Enable jumbo frames for this gateway. Default value
                      is true. Enable jumbo frame support for Gateway. Valid values:
                      true or false. Default value: true.'
                    type: boolean
                  enableLdap:
                    description: 'Enable/disable LDAP. Valid values: true, false.
                      Default value: false. Specify whether to enable LDAP or not.
                      Supported values: ''yes'' and ''no''.'
                    type: boolean
                  enableMonitorGatewaySubnets:
                    description: 'If set to true, the Monitor Gateway Subnets feature
                      is enabled. Default value is false. Available in provider version
                      R2.17.1+. Enable monitor gateway subnets. Valid values: true,
                      false. Default value: false.'
                    type: boolean
                  enablePublicSubnetFiltering:
                    description: 'Create a Public Subnet Filtering gateway. Valid
                      values: true or false. Default value: false. Available as of
                      provider version R2.18+. Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).'
                    type: boolean
                  enableSpotInstance:
                    description: Enable spot instance. NOT supported for production
                      deployment. Enable spot instance. NOT supported for production
                      deployment.
                    type: boolean
                  enableVpcDnsServer:
                    description: 'Enable VPC DNS Server for gateway. Currently only
                      supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina,
                      Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid
                      values: true, false. Default value: false. Enable vpc_dns_server
                      for Gateway. Valid values: true, false.'
                    type: boolean
                  enableVpnNat:
                    description: 'Enable/disable VPN NAT. Only supported for VPN gateway.
                      Valid values: true, false. Default value: true. This field indicates
                      whether to enable VPN NAT or not. Only supported for VPN gateway.
                      Valid values: true, false. Default value: true.'
                    type: boolean
                  faultDomain:
                    description: Fault domain. Required and valid only for OCI. Available
                      as of provider version R2.19.3. Fault domain for OCI.
                    type: string
                  fqdnLanCidr:
                    description: If fqdn_lan_cidr is set, the FQDN gateway will be
                      created with an additional LAN interface using the provided
                      CIDR. This attribute is required when enabling FQDN gateway
                      FireNet in Azure or GCP. Available in provider version R2.17.1+.
                      FQDN gateway lan interface cidr.
                    type: string
                  fqdnLanVpcId:
                    description: FQDN LAN VPC ID. This attribute is required when
                      enabling FQDN gateway FireNet in GCP. Available as of provider
                      version R2.18.1+. LAN VPC ID. Only used for GCP FQDN Gateway.
                    type: string
                  gwSize:
                    description: 'Size of the gateway instance. Example: AWS/AWSGov/AWSChina:
                      "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina:
                      "Standard_B1s", OCI: "VM.Standard2.2". Size of Gateway Instance.'
                    type: string
                  idleTimeout:
                    description: It sets the value (seconds) of the idle timeout.
                      This idle timeout feature is enable only if this attribute is
                      set, otherwise it is disabled. The entered value must be an
                      integer number greater than 300.  Available in provider version
                      R2.17.1+. Typed value when modifying idle_timeout. If it's -1,
                      this feature is disabled.
                    type: number
                  insaneMode:
                    description: ', please see notes here. Enable Insane Mode for
                      Gateway. Valid values: true, false.'
                    type: boolean
                  insaneModeAz:
                    description: 'Region + Availability Zone of subnet being created
                      for Insane Mode gateway. Required for AWS, AWSGov, AWS China,
                      AWS Top Secret or AWS Secret if insane_mode is set. Example:
                      AWS: "us-west-1a". AZ of subnet being created for Insane Mode
                      Gateway. Required if insane_mode is set.'
                    type: string
                  ldapBaseDn:
                    description: 'LDAP base DN. Required if enable_ldap is true. LDAP
                      base DN. Required: Yes if enable_ldap is ''yes''.'
                    type: string
                  ldapBindDn:
                    description: 'LDAP bind DN. Required if enable_ldap is true. LDAP
                      bind DN. Required: Yes if enable_ldap is ''yes''.'
                    type: string
                  ldapPasswordSecretRef:
                    description: 'LDAP password. Required if enable_ldap is true.
                      LDAP password. Required: Yes if enable_ldap is ''yes''.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  ldapServer:
                    description: 'LDAP server address. Required if enable_ldap is
                      true. LDAP server address. Required: Yes if enable_ldap is ''yes''.'
                    type: string
                  ldapUsernameAttribute:
                    description: 'LDAP user attribute. Required if enable_ldap is
                      true. LDAP user attribute. Required: Yes if enable_ldap is ''yes''.'
                    type: string
                  maxVpnConn:
                    description: 'Maximum number of active VPN users allowed to be
                      connected to this gateway. Required if vpn_access is true. Make
                      sure the number is smaller than the VPN CIDR block. Example:
                      100. NOTE: Please see notes Maximum connection of VPN access.'
                    type: string
                  monitorExcludeList:
                    description: Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets'
                      = true. Available in provider version R2.17.1+. A set of monitored
                      instance ids. Only valid when 'enable_monitor_gateway_subnets'
                      = true.
                    items:
                      type: string
                    type: array
                  nameServers:
                    description: A list of DNS servers used to resolve domain names
                      by a connected VPN user when Split Tunnel Mode is enabled. A
                      list of DNS servers used to resolve domain names by a connected
                      VPN user when Split Tunnel Mode is enabled.
                    type: string
                  oktaTokenSecretRef:
                    description: Token for Okta auth mode. Required if otp_mode is
                      "3". Token for Okta auth mode.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  oktaUrl:
                    description: URL for Okta auth mode. Required if otp_mode is "3".
                      URL for Okta auth mode.
                    type: string
                  oktaUsernameSuffix:
                    description: 'Username suffix for Okta auth mode. Example: "aviatrix.com".
                      Username suffix for Okta auth mode.'
                    type: string
                  otpMode:
                    description: 'Two step authentication mode. Valid values: "2"
                      for DUO, "3" for Okta. Two step authentication mode.'
                    type: string
                  peeringHaAvailabilityDomain:
                    description: Peering HA gateway availability domain. Required
                      and valid only for OCI. Available as of provider version R2.19.3.
                      Peering HA availability domain for OCI.
                    type: string
                  peeringHaAzureEipNameResourceGroup:
                    description: 'Name of public IP address resource and its resource
                      group in Azure to be assigned to the HA peering instance. Example:
                      "IP_Name:Resource_Group_Name". Required if peering_ha_eip is
                      set and cloud_type is Azure, AzureGov or AzureChina. Available
                      as of provider version 2.20+. The name of the public IP address
                      and its resource group in Azure to assign to the Peering HA
                      Gateway.'
                    type: string
                  peeringHaEip:
                    description: Public IP address to be assigned to the HA peering
                      instance. Only available for AWS, GCP, Azure, OCI, AzureGov,
                      AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
                      Public IP address that you want assigned to the HA peering instance.
                    type: string
                  peeringHaFaultDomain:
                    description: Peering HA gateway fault domain. Required and valid
                      only for OCI. Available as of provider version R2.19.3. Peering
                      HA fault domain for OCI.
                    type: string
                  peeringHaGwSize:
                    description: 'Size of the Peering HA Gateway to be created. Required
                      if enabling Peering HA. NOTE: Please see notes Peering HA Gateway
                      Size.'
                    type: string
                  peeringHaImageVersion:
                    description: 'The image version of the HA gateway. Use aviatrix_gateway_image
                      data source to programmatically retrieve this value for the
                      desired ha_software_version. If set, we will attempt to update
                      the HA gateway to the specified version if current version is
                      different. If left blank, the gateway upgrades can be managed
                      with the aviatrix_controller_config resource. Type: String.
                      Example: "hvm-cloudx-aws-022021". Available as of provider version
                      R2.20.0. peering_ha_image_version can be used to set the desired
                      image version of the HA gateway. If set, we will attempt to
                      update the gateway to the specified version.'
                    type: string
                  peeringHaInsaneModeAz:
                    description: 'Region + Availability Zone of subnet being created
                      for Insane Mode-enabled Peering HA Gateway. Required for AWS
                      only if insane_mode is set and peering_ha_subnet is set. Example:
                      AWS: "us-west-1a". AZ of subnet being created for Insane Mode
                      Peering HA Gateway. Required if insane_mode is set.'
                    type: string
                  peeringHaSoftwareVersion:
                    description: 'The software version of the HA gateway. If set,
                      we will attempt to update the HA gateway to the specified version
                      if current version is different. If left blank, the HA gateway
                      upgrade can be managed with the aviatrix_controller_config resource.
                      Type: String. Example: "6.5.821". Available as of provider version
                      R2.20.0. peering_ha_software_version can be used to set the
                      desired software version of the HA gateway. If set, we will
                      attempt to update the gateway to the specified version. If left
                      blank, the gateway software version will continue to be managed
                      through the aviatrix_controller_config resource.'
                    type: string
                  peeringHaSubnet:
                    description: 'Public subnet CIDR to create Peering HA Gateway
                      in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS
                      Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering
                      HA for GCP. Example: AWS: "10.0.0.0/16". Public Subnet Information
                      while creating Peering HA Gateway, only subnet is accepted.
                      Required to create peering ha gateway if cloud_type = 1 or 8
                      (AWS or Azure). Optional if cloud_type = 4 (GCP)'
                    type: string
                  peeringHaZone:
                    description: 'Zone to create Peering HA Gateway in. Required if
                      enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional
                      for Azure. Valid values for Azure gateways are in the form "az-n".
                      Example: "az-2". Available for Azure as of provider version
                      R2.17+. Zone information for creating Peering HA Gateway. Required
                      to create peering ha gateway if cloud_type = 4 (GCP). Optional
                      for cloud_type = 8 (Azure).'
                    type: string
                  publicSubnetFilteringGuardDutyEnforced:
                    description: 'Whether to enforce Guard Duty IP blocking.  Only
                      valid when enable_public_subnet_filtering attribute is true.
                      Valid values: true or false. Default value: true. Available
                      as of provider version R2.18+. Whether to enforce Guard Duty
                      IP blocking. Required when `enable_public_subnet_filtering`
                      attribute is true. Valid values: true or false. Default value:
                      true.'
                    type: boolean
                  publicSubnetFilteringHaRouteTables:
                    description: Route tables whose associated public subnets are
                      protected for the HA PSF gateway. Required when enable_public_subnet_filtering
                      and peering_ha_subnet are set. Available as of provider version
                      R2.18+. Route tables whose associated public subnets are protected
                      for the HA PSF gateway. Required when enable_public_subnet_filtering
                      and peering_ha_subnet are set.
                    items:
                      type: string
                    type: array
                  publicSubnetFilteringRouteTables:
                    description: Route tables whose associated public subnets are
                      protected. Only valid when enable_public_subnet_filtering attribute
                      is true. Available as of provider version R2.18+. Route tables
                      whose associated public subnets are protected. Required when
                      `enable_public_subnet_filtering` attribute is true.
                    items:
                      type: string
                    type: array
                  renegotiationInterval:
                    description: It sets the value (seconds) of the renegotiation
                      interval. This renegotiation interval feature is enable only
                      if this attribute is set, otherwise it is disabled. The entered
                      value must be an integer number greater than 300. Available
                      in provider version R2.17.1+. Typed value when modifying renegotiation_interval.
                      If it's -1, this feature is disabled.
                    type: number
                  rxQueueSize:
                    description: Gateway ethernet interface RX queue size. Applies
                      on HA as well if enabled. Once set, can't be deleted or disabled.
                      Available for AWS as of provider version R2.22+. Gateway ethernet
                      interface RX queue size. Supported for AWS related clouds only.
                      Applies on HA as well if enabled.
                    type: string
                  samlEnabled:
                    description: 'Enable/disable SAML. This field is available in
                      Controller version 3.3 or later release. Valid values: true,
                      false. Default value: false. This field indicates whether to
                      enable SAML or not.'
                    type: boolean
                  searchDomains:
                    description: A list of domain names that will use the NameServer
                      when a specific name is not in the destination when Split Tunnel
                      Mode is enabled. A list of domain names that will use the NameServer
                      when a specific name is not in the destination when Split Tunnel
                      Mode is enabled.
                    type: string
                  singleAzHa:
                    description: 'If enabled, Controller monitors the health of the
                      gateway and restarts the gateway if it becomes unreachable.
                      Valid values: true, false. Default value: false. Set to true
                      if this feature is desired.'
                    type: boolean
                  singleIpSnat:
                    description: 'Enable Source NAT in "single ip" mode for this gateway.
                      Valid values: true, false. Default value: false. NOTE: If using
                      SNAT for FQDN use-case, please see notes Enable Source NAT for
                      this container.'
                    type: boolean
                  splitTunnel:
                    description: 'Enable/disable Split Tunnel Mode. Valid values:
                      true, false. Default value: true. Please see here for more information
                      on split tunnel. Specify split tunnel mode.'
                    type: boolean
                  spotPrice:
                    description: Price for spot instance. NOT supported for production
                      deployment. Price for spot instance. NOT supported for production
                      deployment.
                    type: string
                  subnet:
                    description: 'A VPC network address range selected from one of
                      the available network ranges. Example: "172.31.0.0/20". NOTE:
                      If using A VPC Network address range selected from one of the
                      available network ranges.'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: 'Map of tags to assign to the gateway. Only available
                      for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS
                      Top Secret and AWS Secret gateways. Allowed characters vary
                      by cloud type but always include: letters, spaces, and numbers.
                      AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the
                      use of any character.  Azure, AzureGov and AzureChina allows
                      the following special characters: + - = . _ : @. Example: {"key1"
                      = "value1", "key2" = "value2"}. A map of tags to assign to the
                      gateway.'
                    type: object
                  tunnelDetectionTime:
                    description: 'The IPsec tunnel down detection time for the Gateway
                      in seconds. Must be a number in the range [20-600]. The default
                      value is set by the controller (60 seconds if nothing has been
                      changed). NOTE: The controller UI has an option to set the tunnel
                      detection time for all gateways. Available in provider R2.19+.
                      The IPSec tunnel down detection time for the Gateway.'
                    type: number
                  vpcId:
                    description: 'VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina:
                      "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina:
                      "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
                      ID of legacy VPC/Vnet to be connected.'
                    type: string
                  vpcReg:
                    description: 'VPC region the gateway will be created in. Example:
                      AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI:
                      "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1",
                      AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret:
                      "us-iso-east-1", AWS Secret: "us-isob-east-1". Region where
                      this gateway will be launched.'
                    type: string
                  vpnAccess:
                    description: 'Enable user access through VPN to this gateway.
                      Valid values: true, false. Enable user access through VPN to
                      this container.'
                    type: boolean
                  vpnCidr:
                    description: 'VPN CIDR block for the gateway. Required if vpn_access
                      is true. Example: "192.168.43.0/24". VPN CIDR block for the
                      container.'
                    type: string
                  vpnProtocol:
                    description: 'Transport mode for VPN connection. All cloud_types
                      support TCP with ELB, and UDP without ELB. AWS(1) additionally
                      supports UDP with ELB. Valid values: "TCP", "UDP". If not specified,
                      "TCP" will be used. Elb protocol for VPN gateway with elb enabled.
                      Only supports AWS provider. Valid values: ''TCP'', ''UDP''.
                      If not specified, ''TCP” will be used.'
                    type: string
                  zone:
                    description: Availability Zone. Only available for Azure (8),
                      Azure GOV (32), Azure CHINA (2048) and Public Subnet Filtering
                      gateway. Available for Azure as of provider version R2.17+.
                      Availability Zone. Only available for Azure (8), Azure GOV (32),
                      Azure CHINA (2048) and Public Subnet Filtering gateway. Must
                      be in the form 'az-n', for example, 'az-2'.
                    type: string
                required:
                - accountName
                - cloudType
                - gwSize
                - subnet
                - vpcId
                - vpcReg
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: GatewayStatus defines the observed state of Gateway.
            properties:
              atProvider:
                properties:
                  cloudInstanceId:
                    description: Cloud instance ID of the gateway. Instance ID of
                      the gateway.
                    type: string
                  elbDnsName:
                    description: ELB DNS name. ELB DNS Name.
                    type: string
                  fqdnLanInterface:
                    description: The lan interface id of the of FQDN gateway with
                      additional LAN interface. This attribute will be exported when
                      enabling FQDN gateway firenet in Azure. Available in provider
                      version R2.17.1+. FQDN gateway lan interface id.
                    type: string
                  id:
                    type: string
                  imageVersion:
                    description: 'The image version of the gateway. Use aviatrix_gateway_image
                      data source to programmatically retrieve this value for the
                      desired software_version. If set, we will attempt to update
                      the gateway to the specified version if current version is different.
                      If left blank, the gateway upgrades can be managed with the
                      aviatrix_controller_config resource. Type: String. Example:
                      "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
                      image_version can be used to set the desired image version of
                      the gateway. If set, we will attempt to update the gateway to
                      the specified version.'
                    type: string
                  peeringHaCloudInstanceId:
                    description: Cloud instance ID of the HA gateway. Instance ID
                      of the peering HA gateway.
                    type: string
                  peeringHaGwName:
                    description: Aviatrix gateway unique name of HA gateway. Aviatrix
                      gateway unique name of HA gateway.
                    type: string
                  peeringHaPrivateIp:
                    description: Private IP address of HA gateway. Private IP address
                      of HA gateway.
                    type: string
                  peeringHaSecurityGroupId:
                    description: HA security group used for the gateway. Peering HA
                      security group used for the gateway.
                    type: string
                  privateIp:
                    description: Private IP address of the gateway created. Private
                      IP address of the Gateway created.
                    type: string
                  publicDnsServer:
                    description: DNS server used by the gateway. Default is "8.8.8.8",
                      can be overridden with the VPC's setting. NS server used by
                      the gateway.
                    type: string
                  securityGroupId:
                    description: Security group used for the gateway. Security group
                      used for the gateway.
                    type: string
                  softwareVersion:
                    description: 'The software version of the gateway. If set, we
                      will attempt to update the gateway to the specified version
                      if current version is different. If left blank, the gateway
                      upgrade can be managed with the aviatrix_controller_config resource.
                      Type: String. Example: "6.5.821". Available as of provider version
                      R2.20.0. software_version can be used to set the desired software
                      version of the gateway. If set, we will attempt to update the
                      gateway to the specified version. If left blank, the gateway
                      software version will continue to be managed through the aviatrix_controller_config
                      resource.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
